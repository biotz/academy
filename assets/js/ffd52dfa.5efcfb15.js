"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[6271],{6709:(e,s,n)=>{n.r(s),n.d(s,{assets:()=>c,contentTitle:()=>r,default:()=>h,frontMatter:()=>i,metadata:()=>o,toc:()=>d});var t=n(4848),a=n(8453);const i={sidebar_position:2,sidebar_label:"Glossary"},r="Glossary",o={id:"Reference guides/Glossary",title:"Glossary",description:"Device type: Biotz allows managing multiple different devices from the same account. \u201cTypes\u201d are a way of grouping those devices.",source:"@site/docs/Reference guides/Glossary.md",sourceDirName:"Reference guides",slug:"/Reference guides/Glossary",permalink:"/academy/docs/Reference guides/Glossary",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2,sidebar_label:"Glossary"},sidebar:"tutorialSidebar",previous:{title:"MQTT Broker",permalink:"/academy/docs/Reference guides/MQTT broker"},next:{title:"Message-type Schema specification",permalink:"/academy/docs/Reference guides/Message-type Schema specification"}},c={},d=[];function l(e){const s={h1:"h1",img:"img",li:"li",p:"p",strong:"strong",ul:"ul",...(0,a.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(s.h1,{id:"glossary",children:"Glossary"}),"\n",(0,t.jsxs)(s.p,{children:[(0,t.jsx)(s.strong,{children:"Device type"}),": Biotz allows managing multiple different devices from the same account. \u201cTypes\u201d are a way of grouping those devices."]}),"\n",(0,t.jsxs)(s.p,{children:[(0,t.jsx)(s.strong,{children:"Device"}),": a device in Biotz corresponds to a single device in the physical world. There should be a one to one mapping between the IOT devices and the devices registered in Biotz.\n\u200d"]}),"\n",(0,t.jsxs)(s.p,{children:[(0,t.jsx)(s.strong,{children:"Data ingestion flow"}),": a data ingestion flow is the process of receiving data from the devices and persisting it in the database."]}),"\n",(0,t.jsxs)(s.ul,{children:["\n",(0,t.jsxs)(s.li,{children:["\n",(0,t.jsx)(s.p,{children:"Data ingestion message type: each device type can have multiple message types for data ingestion.That means that the devices of that type can send different types of messages to the platform."}),"\n"]}),"\n",(0,t.jsxs)(s.li,{children:["\n",(0,t.jsxs)(s.p,{children:["Data ingestion message type schema: each data ingestion message type can have multiple schemas. That means that the devices can send the same message type data in different formats/shapes. For example, different devices of the same type might be sending the same data in a slightly different format because they are running different firmware versions. Or the same device might change its data schema during its life cycle.\n",(0,t.jsx)(s.strong,{children:"Alarms"}),":"]}),"\n"]}),"\n",(0,t.jsxs)(s.li,{children:["\n",(0,t.jsx)(s.p,{children:"Alarm trigger: an alarm trigger is a rule that defines when an alarm should be triggered. The triggers are specific to data ingestion message type schemas because they depend on the data attributes."}),"\n"]}),"\n",(0,t.jsxs)(s.li,{children:["\n",(0,t.jsx)(s.p,{children:"Alarm: an alarm is the result of an alarm trigger being triggered. The alarm is triggered for a specific device.\nDashboards:"}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(s.p,{children:[(0,t.jsx)(s.strong,{children:"Dashboard"}),":"]}),"\n",(0,t.jsxs)(s.ul,{children:["\n",(0,t.jsxs)(s.li,{children:["Panel",":a"," dashboard can have one or more visualization/charts. Each of them is called a panel."]}),"\n",(0,t.jsx)(s.li,{children:"Variable: device selector that is defined at the dashboard level. Panels can use variables to make the device being viewed changeable by the final user."}),"\n"]}),"\n",(0,t.jsx)(s.p,{children:(0,t.jsx)(s.strong,{children:"Firmware"})}),"\n",(0,t.jsxs)(s.p,{children:[(0,t.jsx)(s.strong,{children:"Event"}),": an event is something that happened within the Biotz platform and has been registered for tracking purposes. For example, when a user joins an organization an event is registered. The events can sometimes generate notifications for the users."]}),"\n",(0,t.jsx)("div",{class:"tutorial-image-container",children:(0,t.jsx)(s.p,{children:(0,t.jsx)(s.img,{alt:"Glossary",src:n(3593).A+"",width:"610",height:"298"})})})]})}function h(e={}){const{wrapper:s}={...(0,a.R)(),...e.components};return s?(0,t.jsx)(s,{...e,children:(0,t.jsx)(l,{...e})}):l(e)}},3593:(e,s,n)=>{n.d(s,{A:()=>t});const t=n.p+"assets/images/glossary-9b29b0bc6eacfccb5d8a69c3ab774abd.png"},8453:(e,s,n)=>{n.d(s,{R:()=>r,x:()=>o});var t=n(6540);const a={},i=t.createContext(a);function r(e){const s=t.useContext(i);return t.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function o(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:r(e.components),t.createElement(i.Provider,{value:s},e.children)}}}]);