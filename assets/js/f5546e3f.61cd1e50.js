"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[363],{250:(e,a,i)=>{i.r(a),i.d(a,{assets:()=>s,contentTitle:()=>d,default:()=>c,frontMatter:()=>r,metadata:()=>l,toc:()=>o});var n=i(4848),t=i(8453);const r={sidebar_position:6,sidebar_label:"How to create a dashboard"},d="How to create a dashboard",l={id:"How-to guides/How to create a dashboard",title:"How to create a dashboard",description:"Introduction",source:"@site/docs/How-to guides/How to create a dashboard.md",sourceDirName:"How-to guides",slug:"/How-to guides/How to create a dashboard",permalink:"/academy/docs/How-to guides/How to create a dashboard",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:6,frontMatter:{sidebar_position:6,sidebar_label:"How to create a dashboard"},sidebar:"tutorialSidebar",previous:{title:"How to configure and trigger a remote action in devices",permalink:"/academy/docs/How-to guides/How to configure and trigger a remote action in devices"},next:{title:"How to use dashboard variables",permalink:"/academy/docs/How-to guides/How to use dashboard variables"}},s={},o=[{value:"Introduction",id:"introduction",level:2},{value:"Prerequisites",id:"prerequisites",level:2},{value:"Creating a dashboard",id:"creating-a-dashboard",level:2},{value:"Creating panels",id:"creating-panels",level:2},{value:"General information",id:"general-information",level:3},{value:"Configuration",id:"configuration",level:3},{value:"Query builder",id:"query-builder",level:6},{value:"Appearance",id:"appearance",level:6},{value:"Gauge",id:"gauge",level:5},{value:"Query builder",id:"query-builder-1",level:6},{value:"Attribute type and Available aggregation methods",id:"attribute-type-and-available-aggregation-methods",level:5},{value:"Appearance",id:"appearance-1",level:6},{value:"Pie chart",id:"pie-chart",level:5},{value:"Query builder",id:"query-builder-2",level:6},{value:"Attribute type and Available aggregation methods",id:"attribute-type-and-available-aggregation-methods-1",level:5},{value:"Appearance",id:"appearance-2",level:6},{value:"State chart",id:"state-chart",level:5},{value:"Query builder",id:"query-builder-3",level:6},{value:"Attribute type and Available aggregation methods",id:"attribute-type-and-available-aggregation-methods-2",level:5},{value:"Appearance",id:"appearance-3",level:6}];function h(e){const a={h1:"h1",h2:"h2",h3:"h3",h5:"h5",h6:"h6",li:"li",p:"p",strong:"strong",ul:"ul",...(0,t.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(a.h1,{id:"how-to-create-a-dashboard",children:"How to create a dashboard"}),"\n",(0,n.jsx)(a.h2,{id:"introduction",children:"Introduction"}),"\n",(0,n.jsx)(a.p,{children:"Biotz provides a dashboarding tool that can be used to visualize the data coming from the devices."}),"\n",(0,n.jsx)(a.h2,{id:"prerequisites",children:"Prerequisites"}),"\n",(0,n.jsx)(a.p,{children:"In order to create a dashboard having a device-type with at least one message type and schema is required. Having a device that has already sent some data is also recommended to visualize the created panels straight away and have a faster feedback loop."}),"\n",(0,n.jsx)(a.h2,{id:"creating-a-dashboard",children:"Creating a dashboard"}),"\n",(0,n.jsx)(a.p,{children:"Dashboards are created from the \u201cDashboards\u201d list. Just a name and an optional description are requested."}),"\n",(0,n.jsx)("div",{class:"tutorial-image-container",children:(0,n.jsx)(a.p,{children:"![Dashboards](/academy/docs/How-to guides/img/dashboards.png)"})}),"\n",(0,n.jsx)(a.p,{children:"When clicking on \u201ccreate\u201d an empty dashboard is created."}),"\n",(0,n.jsx)("div",{class:"tutorial-image-container",children:(0,n.jsx)(a.p,{children:"![Empty dashboard](/academy/docs/How-to guides/img/empty-dashboard.png)"})}),"\n",(0,n.jsx)(a.h2,{id:"creating-panels",children:"Creating panels"}),"\n",(0,n.jsx)(a.p,{children:"A dashboard is composed of one or more panels. To create a new one use the \u201cNew panel\u201d button and select the type of panel to create."}),"\n",(0,n.jsx)("br",{}),"\n",(0,n.jsx)(a.p,{children:"At the moment the available panel types are the following: time-series, pie chart and gauge."}),"\n",(0,n.jsx)("div",{class:"tutorial-image-container",children:(0,n.jsx)(a.p,{children:"![Creating panels](/academy/docs/How-to guides/img/creating-panels.png)"})}),"\n",(0,n.jsx)(a.h3,{id:"general-information",children:"General information"}),"\n",(0,n.jsx)(a.p,{children:"Name the panel and optionally set a description."}),"\n",(0,n.jsx)("br",{}),"\n",(0,n.jsx)(a.h3,{id:"configuration",children:"Configuration"}),"\n",(0,n.jsx)(a.p,{children:"(make this type dependent)"}),"\n",(0,n.jsx)(a.p,{children:(0,n.jsx)(a.strong,{children:"Time series"})}),"\n",(0,n.jsx)(a.h6,{id:"query-builder",children:"Query builder"}),"\n",(0,n.jsx)(a.p,{children:"The query builder is used to define which data will the panel display.  The x-axis will always be the time, and the y axis will contain one or more time-series lines. Each line is defined by an independent query."}),"\n",(0,n.jsx)("br",{}),"\n",(0,n.jsx)(a.p,{children:"Defining a query requires the following configuration:"}),"\n",(0,n.jsxs)(a.ul,{children:["\n",(0,n.jsxs)(a.li,{children:["Selecting a device or device variable. Each line in the chart can show the data of a single device. The device to be used can be fixed and defined at panel creation time, or determined by a dashboard variable (see ",(0,n.jsx)("a",{href:"./How to use dashboard variables",target:"_self",children:"this"})," for more info)."]}),"\n",(0,n.jsx)(a.li,{children:"Message type and attribute. Each line in the chart can show the data of a single message type attribute."}),"\n",(0,n.jsx)(a.li,{children:"Aggregation method. The method used to aggregate the devices data to adapt the number of displayed points to the user's screen size and zoom level."}),"\n"]}),"\n",(0,n.jsx)(a.p,{children:(0,n.jsx)(a.strong,{children:"Attribute type and Available aggregation methods"})}),"\n",(0,n.jsxs)(a.ul,{children:["\n",(0,n.jsx)(a.li,{children:"Numeric: Count, maximum, minimum, mean, standard deviation, and sum."}),"\n",(0,n.jsx)(a.li,{children:"Boolean: Count"}),"\n",(0,n.jsx)(a.li,{children:"Text: Count"}),"\n"]}),"\n",(0,n.jsx)("br",{}),"\n",(0,n.jsx)(a.p,{children:"The reason for aggregating the data is performance. Lets say a certain device is sending data observations every second, and the user wants to display the data of a whole month. That would result in 2,678,400 data points. Displaying so many data points would be technically impossible for the browser because of the limited amount of pixels that a screen can display. Also, it would be very CPU heavy. To avoid that, the dashboard panel aggregates data to adapt to the screen size and chosen zoom level."}),"\n",(0,n.jsx)(a.h6,{id:"appearance",children:"Appearance"}),"\n",(0,n.jsx)("div",{class:"tutorial-image-container",children:(0,n.jsx)(a.p,{children:"![appearance](/academy/docs/How-to guides/img/appearance.png)"})}),"\n",(0,n.jsx)(a.p,{children:"The following appearance related options are available:"}),"\n",(0,n.jsxs)(a.ul,{children:["\n",(0,n.jsx)(a.li,{children:"X axis title"}),"\n",(0,n.jsx)(a.li,{children:"Y axis title"}),"\n",(0,n.jsx)(a.li,{children:"Series appearance (configurable for each of them)"}),"\n",(0,n.jsx)(a.li,{children:"Display name"}),"\n",(0,n.jsx)(a.li,{children:"Color"}),"\n",(0,n.jsx)(a.li,{children:"Dash style"}),"\n",(0,n.jsx)(a.li,{children:"Marker symbol"}),"\n",(0,n.jsx)(a.li,{children:"Enable/disable legend"}),"\n"]}),"\n",(0,n.jsx)(a.h5,{id:"gauge",children:"Gauge"}),"\n",(0,n.jsx)(a.h6,{id:"query-builder-1",children:"Query builder"}),"\n",(0,n.jsx)(a.p,{children:"The query builder is used to define which data will the gauge display. A gauge shows the aggregation of a certain device message-type attribute in the selected time-frame period."}),"\n",(0,n.jsx)(a.p,{children:"Defining the query requires the following configuration:"}),"\n",(0,n.jsxs)(a.ul,{children:["\n",(0,n.jsxs)(a.li,{children:["Selecting a device or device variable. Each gauge can show the data of a single device. The device to be used can be fixed and defined at panel creation time, or determined by a dashboard variable (see ",(0,n.jsx)("a",{href:"./How to use dashboard variables",target:"_self",children:"this"})," for more info)."]}),"\n",(0,n.jsx)(a.li,{children:"Message type and attribute. Each gauge can work with a single attribute."}),"\n",(0,n.jsx)(a.li,{children:"Aggregation method. The data for the selected device and attribute will be aggregated using this method. Note that the special \u201cfirst\u201d and \u201clast\u201d aggregation methods are also available that show a single data point.\n\u200d"}),"\n"]}),"\n",(0,n.jsx)(a.h5,{id:"attribute-type-and-available-aggregation-methods",children:"Attribute type and Available aggregation methods"}),"\n",(0,n.jsxs)(a.ul,{children:["\n",(0,n.jsx)(a.li,{children:"Numeric: Count, maximum, minimum, mean, standard deviation, sum, first and last."}),"\n",(0,n.jsx)(a.li,{children:"Boolean: Count, first and last."}),"\n",(0,n.jsx)(a.li,{children:"Text: Count, first and last.\n\u200d"}),"\n"]}),"\n",(0,n.jsx)(a.h6,{id:"appearance-1",children:"Appearance"}),"\n",(0,n.jsx)(a.p,{children:"The following appearance related options are available:"}),"\n",(0,n.jsxs)(a.ul,{children:["\n",(0,n.jsx)(a.li,{children:"Min value"}),"\n",(0,n.jsx)(a.li,{children:"Max value"}),"\n",(0,n.jsx)(a.li,{children:"Unit"}),"\n",(0,n.jsx)(a.li,{children:"Thresholds: the gauge can represent multiple threshold values using colors."}),"\n",(0,n.jsx)(a.li,{children:"Percentage"}),"\n",(0,n.jsx)(a.li,{children:"Color"}),"\n"]}),"\n",(0,n.jsx)(a.h5,{id:"pie-chart",children:"Pie chart"}),"\n",(0,n.jsx)(a.h6,{id:"query-builder-2",children:"Query builder"}),"\n",(0,n.jsx)(a.p,{children:"The query builder is used to define which data will the pie chart display. Each segment of the pie is defined by an independent query that displays the aggregation of a certain device message type attribute."}),"\n",(0,n.jsx)(a.p,{children:"\u200d"}),"\n",(0,n.jsx)(a.p,{children:"Defining the query requires the following configuration:"}),"\n",(0,n.jsxs)(a.ul,{children:["\n",(0,n.jsxs)(a.li,{children:["Selecting a device or device variable. Each pie segment can show the data of a single device. The device to be used can be fixed and defined at panel creation time, or determined by a dashboard variable\n(see ",(0,n.jsx)("a",{href:"./How to use dashboard variables",target:"_self",children:"this"})," for more info)."]}),"\n",(0,n.jsx)(a.li,{children:"Message type and attribute. Each pie segment can work with a single attribute."}),"\n",(0,n.jsx)(a.li,{children:"Aggregation method. The data for the selected device and attribute will be aggregated using this method. Note that the special \u201cfirst\u201d and \u201clast\u201d aggregation methods are also available that show a single data point.\n\u200d"}),"\n"]}),"\n",(0,n.jsx)(a.h5,{id:"attribute-type-and-available-aggregation-methods-1",children:"Attribute type and Available aggregation methods"}),"\n",(0,n.jsxs)(a.ul,{children:["\n",(0,n.jsx)(a.li,{children:"Numeric: Count, maximum, minimum, mean, standard deviation, sum, first and last."}),"\n",(0,n.jsx)(a.li,{children:"Boolean: Count, first and last."}),"\n",(0,n.jsx)(a.li,{children:"Text: Count, first and last.\n\u200d"}),"\n"]}),"\n",(0,n.jsx)(a.h6,{id:"appearance-2",children:"Appearance"}),"\n",(0,n.jsx)(a.p,{children:"The following appearance related options are available:"}),"\n",(0,n.jsxs)(a.ul,{children:["\n",(0,n.jsx)(a.li,{children:"Enable/disable legend"}),"\n",(0,n.jsx)(a.li,{children:"Enable/disable data-labels"}),"\n",(0,n.jsx)(a.li,{children:"Segments appearance"}),"\n",(0,n.jsx)(a.li,{children:"Display name"}),"\n",(0,n.jsx)(a.li,{children:"Color\n\u200d"}),"\n"]}),"\n",(0,n.jsx)(a.h5,{id:"state-chart",children:"State chart"}),"\n",(0,n.jsx)(a.h6,{id:"query-builder-3",children:"Query builder"}),"\n",(0,n.jsx)(a.p,{children:"The query builder is used to define which data will the state chart display. Each chart can show the data from one variable."}),"\n",(0,n.jsx)(a.p,{children:"\u200d"}),"\n",(0,n.jsx)(a.p,{children:"Defining the query requires the following configuration:"}),"\n",(0,n.jsxs)(a.ul,{children:["\n",(0,n.jsxs)(a.li,{children:["Selecting a device or device variable. The device to be used can be fixed and defined at panel creation time, or determined by a dashboard variable (see ",(0,n.jsx)("a",{href:"./How to use dashboard variables",target:"_self",children:"this"})," for more info)."]}),"\n",(0,n.jsx)(a.li,{children:"Message type and attribute."}),"\n",(0,n.jsx)(a.li,{children:"Aggregation method. The data for the selected device and attribute will be aggregated using this method. Note that the special \u201cfirst\u201d and \u201clast\u201d aggregation methods are also available that show a single data point.\n\u200d"}),"\n"]}),"\n",(0,n.jsx)(a.h5,{id:"attribute-type-and-available-aggregation-methods-2",children:"Attribute type and Available aggregation methods"}),"\n",(0,n.jsxs)(a.ul,{children:["\n",(0,n.jsx)(a.li,{children:"Numeric: Count, maximum, minimum, mean, standard deviation, sum, first and last."}),"\n",(0,n.jsx)(a.li,{children:"Boolean: Count, first and last."}),"\n",(0,n.jsx)(a.li,{children:"Text: Count, first and last.\n\u200d"}),"\n"]}),"\n",(0,n.jsx)(a.h6,{id:"appearance-3",children:"Appearance"}),"\n",(0,n.jsx)(a.p,{children:"The following appearance related options are available:"}),"\n",(0,n.jsxs)(a.ul,{children:["\n",(0,n.jsx)(a.li,{children:"Enable/disable value with unit marker."}),"\n",(0,n.jsx)(a.li,{children:"Conditions for different styles, applies the first that's true"}),"\n",(0,n.jsx)(a.li,{children:"Color"}),"\n",(0,n.jsx)(a.li,{children:"Text to display"}),"\n"]})]})}function c(e={}){const{wrapper:a}={...(0,t.R)(),...e.components};return a?(0,n.jsx)(a,{...e,children:(0,n.jsx)(h,{...e})}):h(e)}},8453:(e,a,i)=>{i.d(a,{R:()=>d,x:()=>l});var n=i(6540);const t={},r=n.createContext(t);function d(e){const a=n.useContext(r);return n.useMemo((function(){return"function"==typeof e?e(a):{...a,...e}}),[a,e])}function l(e){let a;return a=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:d(e.components),n.createElement(r.Provider,{value:a},e.children)}}}]);